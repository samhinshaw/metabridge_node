// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FileUpload component renders. 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FileUpload
    uploadFile={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <label
        className="file-label"
        htmlFor="metaboliteUpload"
      >
        <input
          className="file-input"
          id="metaboliteUpload"
          name="metaboliteUpload"
          onChange={[Function]}
          type="file"
        />
        <span
          className="file-cta"
        >
          <span
            className="file-icon"
          >
            <i
              className="fas fa-upload"
            />
          </span>
          <span
            className="file-label"
          >
            Upload Metabolites
          </span>
        </span>
        <span
          className="file-name"
        >
          
        </span>
      </label>,
      "className": "file has-name is-centered is-boxed",
      "id": "fileUpload",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="file-input"
            id="metaboliteUpload"
            name="metaboliteUpload"
            onChange={[Function]}
            type="file"
          />,
          <span
            className="file-cta"
          >
            <span
              className="file-icon"
            >
              <i
                className="fas fa-upload"
              />
            </span>
            <span
              className="file-label"
            >
              Upload Metabolites
            </span>
          </span>,
          <span
            className="file-name"
          >
            
          </span>,
        ],
        "className": "file-label",
        "htmlFor": "metaboliteUpload",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "file-input",
            "id": "metaboliteUpload",
            "name": "metaboliteUpload",
            "onChange": [Function],
            "type": "file",
          },
          "ref": [Function],
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="file-icon"
              >
                <i
                  className="fas fa-upload"
                />
              </span>,
              <span
                className="file-label"
              >
                Upload Metabolites
              </span>,
            ],
            "className": "file-cta",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="fas fa-upload"
                />,
                "className": "file-icon",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-upload",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Upload Metabolites",
                "className": "file-label",
              },
              "ref": null,
              "rendered": "Upload Metabolites",
              "type": "span",
            },
          ],
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "file-name",
          },
          "ref": null,
          "rendered": "",
          "type": "span",
        },
      ],
      "type": "label",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <label
          className="file-label"
          htmlFor="metaboliteUpload"
        >
          <input
            className="file-input"
            id="metaboliteUpload"
            name="metaboliteUpload"
            onChange={[Function]}
            type="file"
          />
          <span
            className="file-cta"
          >
            <span
              className="file-icon"
            >
              <i
                className="fas fa-upload"
              />
            </span>
            <span
              className="file-label"
            >
              Upload Metabolites
            </span>
          </span>
          <span
            className="file-name"
          >
            
          </span>
        </label>,
        "className": "file has-name is-centered is-boxed",
        "id": "fileUpload",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="file-input"
              id="metaboliteUpload"
              name="metaboliteUpload"
              onChange={[Function]}
              type="file"
            />,
            <span
              className="file-cta"
            >
              <span
                className="file-icon"
              >
                <i
                  className="fas fa-upload"
                />
              </span>
              <span
                className="file-label"
              >
                Upload Metabolites
              </span>
            </span>,
            <span
              className="file-name"
            >
              
            </span>,
          ],
          "className": "file-label",
          "htmlFor": "metaboliteUpload",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "file-input",
              "id": "metaboliteUpload",
              "name": "metaboliteUpload",
              "onChange": [Function],
              "type": "file",
            },
            "ref": [Function],
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="file-icon"
                >
                  <i
                    className="fas fa-upload"
                  />
                </span>,
                <span
                  className="file-label"
                >
                  Upload Metabolites
                </span>,
              ],
              "className": "file-cta",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="fas fa-upload"
                  />,
                  "className": "file-icon",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fas fa-upload",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Upload Metabolites",
                  "className": "file-label",
                },
                "ref": null,
                "rendered": "Upload Metabolites",
                "type": "span",
              },
            ],
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "file-name",
            },
            "ref": null,
            "rendered": "",
            "type": "span",
          },
        ],
        "type": "label",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
