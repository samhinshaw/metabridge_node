// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    className="button is-large is-link"
    icon={null}
    link="/help/tutorial"
    title="Tutorial"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Link
        href="/help/tutorial"
      >
        <a
          className="button is-large is-link"
        >
          <span>
            Tutorial
          </span>
        </a>
      </Link>,
      "className": "control",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <a
          className="button is-large is-link"
        >
          <span>
            Tutorial
          </span>
        </a>,
        "href": "/help/tutorial",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            undefined,
            <span>
              Tutorial
            </span>,
          ],
          "className": "button is-large is-link",
        },
        "ref": null,
        "rendered": Array [
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Tutorial",
            },
            "ref": null,
            "rendered": "Tutorial",
            "type": "span",
          },
        ],
        "type": "a",
      },
      "type": [Function],
    },
    "type": "p",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Link
          href="/help/tutorial"
        >
          <a
            className="button is-large is-link"
          >
            <span>
              Tutorial
            </span>
          </a>
        </Link>,
        "className": "control",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <a
            className="button is-large is-link"
          >
            <span>
              Tutorial
            </span>
          </a>,
          "href": "/help/tutorial",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              undefined,
              <span>
                Tutorial
              </span>,
            ],
            "className": "button is-large is-link",
          },
          "ref": null,
          "rendered": Array [
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Tutorial",
              },
              "ref": null,
              "rendered": "Tutorial",
              "type": "span",
            },
          ],
          "type": "a",
        },
        "type": [Function],
      },
      "type": "p",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
